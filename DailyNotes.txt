

JAVA:
=======



language:
=========
		communication with human
		english,telugu,tamil,kannada,hindi.....

Programming Lanugage:
=====================
		communication with machine
		
		software-->set of programs/instrutions


		POP 									OOP
	B,BCPL,C,COBOL,PASCAL,PHOTON...	      C++,JAVA,.NET,Python.....
		
				performance  		inheritance,polymorphisam
				security			encapsulation,abstraction...
				
				
	Why JAVA?	
			
			1.platform independent
			2.Garbage Collection	-->garbage collector  c,C++
				
				
					WORA    python,net
					
						windows11
						machine1  java app			
					
					
			window7			linux
			machine2		machine3
			  A					B
			  
			  pyc
					java 21	 java 22
			  
			java installation  sun micro system--->oracle  corporation
			
				1996 JDK 1.0		James Gosling
			
				
					JDK 22		OAK
					
					JAVA 8 
					
											JAVA
					JSE						 JEE											JME	
				corejava,swings,applets...	Servlets,JSP,spring(framework),webservices		android
							
			1.standalone apps/desktop apps   vlc mediaplayer,anti virus	
					
			2.web apps								
			
			3.Distributed apps		
				
			4.mobile apps
					
				java	
					JDK--->JRE-->JVM(execute)
					
					
	Welcome to java 


	Welcome.java 
	class Welcome
	{
	public static void main(String args[])
	{
	
	}
	
	}
	1.classnames/interfaces must start start uppercase letter ex:TestExample,HashMap,LinkedHashMap
	2.methods/variables should start with lowercase and rest of the words uppercase Ex:addOfTwo(),ageOfPerson
	

Identifiers:
============
	any  name in java will call it as identifier
	
		variable name,methodname,classname ,interface ,label.....


	a-z
	A-Z
	0-9
	$
	_


Variables/Data Types:
===================== static typed PL

	variable is a name of memory location
	
	syntax:
			datatype varname=value; 
			
				datatype varname;//declaration
				varname=value;//intialization
				
				
				
				Premitive DT		     NPDT
			8							String,student,emp,arr...	
				
		byte    1 byte    -128 to 127
		short	2 bytes	 -32768 to 32767		number
		int     4 bytes	 -2147483648 to 2147483647
		long    8 bytes  9223372036854775808  to  9223372036854775807
		
		float   4 bytes		float salary=12.21332143564565f; 5-6 
		double  8 bytes     14-15 decimal 
		
		boolean	1 bit true-1 false-0		
		char    2 bytes english-->ASCII
						UNICODE-->18 
		
				
					long aadhar=92384023848032; 7 bytes
				
				
				local -->the variable defined inside the method
				
				global-->the variable defined outside the method
				
				
Flow Control Statements:
=======================
					if
					else
					switch
					for
					while
					do
					case
					default
					break
					continue
				
				
		IDE		--->eclipse,netbeans,myeclipse,vscode,intellji...
				
				
				
				





Arrays:
=========
	used to group values
	i can hold only similar values

	int marks=123;
		int marks1[]= {12,32,12,54,66,33,97};//0,1,2,3,4,5,6  array literal--smilar type
		int marks2[]=new int[5];//0
		marks2[0]=123;
		marks2[1]=22;
		marks2[3]=54;
		
		System.out.println(marks1[3]);
		System.out.println(marks2[3]);
		System.out.println(marks2[5]);//AIOE
		System.out.println(marks);
		
java-->keywords-->53--->lowercase 


instance and static :
=====================
	
		local
		
		global--instance and static
		
	
	syntax
		we will use static keyword  to define static properties(variable,method,block)
		if there is no static keywrod that is instance/non-static
	

	memory
		static variable will get memory only once at the time of class loading into JVM.
		instance variable will get memory for every object creation
		
		class--collection of data members and member functions
			object -->instance of a class
		
			classname objname=new classname();
			Test obj=new Test();
	
	Access
		static properties can be accessed by using class name
		instance  properties can be accessed by using obj name
	
	
	
	Usage
		contryname,orgname,schoolname...

		for common data where one time memory is enough will go with static.
		for unique data where different memory is required for every instance will go with instance.
		
		
		
methods		
		it is block of statements
		
		
package(folder)	,import

package com.ericsson.corejava



NOTE:
1)By default package for every java file is java.lang
2)By Default parent class for every java class is java.lang.Object
		
Scanner/dynamic input		java.util
		
	public class Test {
public static void main(String[] args) {//"12",13
	//wrapper clsses 8 DT 8
	int a=Integer.parseInt(args[0]);
	int b=Integer.parseInt(args[1]);
	int result=a+b;
	System.out.println("Add of two numbers :"+result);
}
}
	
OOPS:
======		
1)Inheritance
2)Polymorphisam
3)abstraction
4)encapsualtion
		
		
					
		Inheritance:
		============	Code Reusability
		extends,implements
		
		class Test		//parent
		{
		
		200 methods
		
		}
					
		class Hello extends Test{ //child
		
		
		
		}		
					
					
				
		Java Doesnt support multiple inheritance through classes
		Java  support multiple inheritance through interfaces
		
			  
			  
abstract methods:without implementation/body/logic
concrete methods:with implementation/body/logic (non-abstract)			  
			  
			  
			  
		public abstract void m1();	  -->abstraction-->hiding
						  
							class				-->only concrete/implemented methods		  
			0-100%			abstract classes 	-->combination of both abstract and concrete methods
			100%			interfaces			-->only abstract methods
			  
								by default interface methods are public abstract
								by default interface variables are public static final
			  
			  
			  
			  
			  
			  
			  X						Y
			  class Parent1         class Parent2
			  {						{
			  
			  m1()					m1()
			  
			  
			  
			  
			  }						}
					
			Z		
			class Child extends Parent1,Parent2
			{
			
			
			Child child =new Child();
			child.m1();//confused
			
			}
polymorphisam,Encapsulation,public,private,protected,default,final,this,super,constructor


polymorphisam:-
==============

				method overloading/compile time polymorphisam/static binding
				method overriding/run time polymorphisam/dynamic binding
					
					
		method overloading:
			
				method name is same but signature is different.
				
										no of params
										order of params
										type of params
		method overriding:
		==================
				method name is same but implementation/body/logic is different
					
					
			class Parent{
			1000 methods
			
			}		
			class Child{
			
			
			}	
				
				@Override
	
final keyword can be used before the variable,method,class	
				
				final variables are fixed ,we cannot change the value of final variable
				final methods ,we cannot override the final methods
				final classes,extending final classes not possible
				
				
				
				
constructor:
============
			intialization of object
			
			int a;
			a=12;
	
	
	
	classname objname=new classname();
	classname objname=new constructor();
	class Test{
	
	public int add(int a,int b)
	{
	return a+b;
	}
	
	main()
	{
	Test test =new Test();
	test.add(12,23);
	
	}
	
	
	}
this,super

this ,which is used to represent current class properties(variable,method,constructor,object)
super ,which is used to represent parent class properties(variable,method,constructor)

				
public,private,protected,default:
===================================				
				
		public :every where 
		private:class level scope
		default:package level scope
		protected:package level scope and outside the package when ever it is child we can access
				
Encapsulation:
==============
	wrapping up of the data and its corresponding  behaviour together 
		
		

String,StringBuffer,StringBuilder:	java.lang
==================================
		String is imuttable
		StringBuffer,StringBuilder are muttable

		StringBuffer methods are  synchronized(thread safe)
		StringBuilder methods are not synchronized(no thread safe)
		

		String orgname="";//literal
		
		String name=new String("");
		
		once we declared string we cannot change the value



			public void m1()
			{										theards
			.										t1,t2,t3
			.
			.
			.
			
			}

			public synchronized void m1()
			{
			.
			.
			.
			.
			
			}

	String:
	======literal
	heap area-->String constant pool
	
		
			-->duplicates are not allowed 





Assignments


corejava basics -->3


Exception Handling:
====================

the problems without exception handling

		1)system defined error messages
		2)abnormal termination



the advantages with exception handling

		1)user friendly  error messages
		2)normal termination


		try,catch,finally,throw,throws


		
NOTE:
1)By default package for every java file is java.lang
2)By Default parent class for every java class is java.lang.Object
3)By Default parent class for every Exception class is java.lang.Throwable




1)extends Exception/RuntimeException/Throwable
2)param constructor











				